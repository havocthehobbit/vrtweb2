let mongodb=require("mongodb")
let progargs=require("./execRunParams.js").args


let MongoInst={
    defInit : function(params, cbp){
        var tt=this
        let cb=()=>{}
        if (typeof(cbp)==="function"){cb=cbp}
        
        let consolelogdebug=false

        let connection={
            host : "localhost",
            dbpass : "",
            dbport : 27017,
            dbname : "test",
        }

        if (typeof(params.conn)!=="undefined"){
            connection=params.conn
        }
        if (typeof(params.host)!=="undefined"){
            connection.host=params.host
        }
        if (typeof(params.dbpass)!=="undefined"){
            connection.dbpass=params.dbpass
        }
        if (typeof(params.dbport)!=="undefined"){
            connection.dbport=params.dbport
        }
        if (typeof(params.dbname)!=="undefined"){
            connection.dbname=params.dbname
        }

        if (typeof(params.consolelogdebug)!=="undefined"){
            consolelogdebug=params.consolelogdebug
        }


        progargs.params(function (val, index, array) {     
            if (val==="--dbhost" || val==="-dbhost" || val==="--dbhostip" || val==="--dbHost" || val==="-dbHost" || val==="--dbHostIP"){
                connection.host=array[index + 1 ] 
            }

            if (val==="--dbport" || val==="-dbport" || val==="--dbPort" || val==="-dbPort"){
                connection.dbport=array[index + 1 ] 
            }

            if (val==="--dbname" || val==="-dbname" || val==="--dbName" || val==="-dbName"){
                connection.dbname=array[index + 1 ] 
            }

            if (val==="--dbpass" || val==="-dbpass" || val==="--dbPass" || val==="-dbPass"){
                connection.dbpass=array[index + 1 ] 
            }

            if (val==="--dbdebug" || val==="-dbdebug" || val==="--dbDebug" || val==="-dbDebug"){
                connection.consolelogdebug=array[index + 1 ] 
            }
        
        });
        


        let mongoclient=mongodb.MongoClient;
        tt.client=mongoclient

        var userandpass=""				
        var option={};
        option.useNewUrlParser=true;
        option.useUnifiedTopology= true ;
 
        if (connection.dbpass!==""){
            option.user=connection.dbuser;
            option.password=connection.dbpass;
        }

        let np={ option : option , connection : connection, cb : cb  , consolelogdebug : consolelogdebug}
        return (np)
    },
    init : function(params, cbp){
        var tt=this

        let np=tt.defInit.apply(tt, arguments)
        let connection={...np.connection}
        let option=np.option
        let consolelogdebug=np.consolelogdebug
        let cb=np.cb       
        
        progargs.params(function (val, index, array) {
            if (val==="--dbadminpass" || val==="-dbadminpass" || val==="--dbAdminPass" || val==="-dbAdminPass"){
                connection.dbpass=array[index + 1 ] 
            }        
        });

        var url = 'mongodb://' +  connection.host + ":" + connection.dbport + "/" + connection.dbname;
        
        tt.client.connect( url , option )          
        .then((client)=>{           
            if (consolelogdebug){
                console.log("connected to MongoDB successfully ..." + connection.host + ":" + connection.dbport + "/" + connection.dbname)
            }  
    
            let db = client.db(connection.dbname)            
            tt.db=db;
            tt.status=true		
            
            cb(tt); 

        }).catch((err)=>{
            if (consolelogdebug){
                console.log("MongoDB connection Err : " + connection.host + ":" + connection.dbport + "/" + connection.dbname + "\n" , err)
            }

            tt.err=err
            tt.status=false

            cb(tt);	
          
        });
        
        return 
    },
    initAdmin : function(params, cbp){
        var tt=this

        let np=tt.defInit.apply(tt, arguments)
        let connection=np.connection
        let option=np.option
        let consolelogdebug=np.consolelogdebug
        let cb=np.cb

        var url = 'mongodb://' +  connection.host + ":" + connection.dbport;

        tt.client.connect( url , option )
        .then((client)=>{ 
            if (consolelogdebug){
                console.log("connected to MongoDB as Admin successfully ..." + connection.host + ":" + connection.dbport)
            }   
                  
            let db = client.db(connection.dbname).admin()  
            // https://www.mongodb.com/docs/manual/reference/command/nav-administration/                              
            tt.dbAdmin=db            			
            tt.statusAdmin=true
            
            cb(tt);
        }).catch((err)=>{
            if (consolelogdebug){
                console.log("MongoDB Admin connection Err : " + + connection.host + ":" + connection.dbport + "\n", err)
            }
            tt.errAdmin=err
            tt.statusAdmin=false
            cb(tt);
        });
        
        return 
    },
    db : {},
    dbAdmin : {},
    mongoClient : undefined,
    mongoClientAdmin : undefined,

    err : undefined,
    status : false,

    errAdmin : undefined,
    statusAdmin : false,
}







module.exports.MongoInst=MongoInst