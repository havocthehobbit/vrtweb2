var child_process=require('child_process')
var fs=require('fs');
var path=require('path');
let execSync=child_process.execSync; // synchronouse shell run : var result=execSync(cmdStr)
let existsSync=fs.existsSync;
let lstatSync=fs.lstatSync;
let readdirSync=fs.readdirSync;

let progargs=require("./execRunParams.js").args
$cn=require("./libNative").libNative
$cnn=require("./libNativeNode").libNativeNode

let cl=$cn.l
let tof=$cn.tof
let isUn=$cn.isUn

let installmain={
    init : (...args)=>{
        let tt=installmain

        
        progargs.params(function (val, index, array) {  
            
            //c.l("progargs : ",array)
            cl("process : ", )
            //cl("process : ", process.dlop)
        })

        progargs.params(function (val, index, array) {     
            if (val==="--installhelp" || val==="-installhelp" || val==="--setuphelp" || val==="-setuphelp"){
                //temp=array[index + 1 ] 
                //tempsettings=true
                process.exit()
            }        
        });
        progargs.params(function (val, index, array) {     
            if (val==="--install" || val==="-install"){
                //temp=array[index + 1 ]                 
                tt.installAllPrompt()
            }                    
        });


    },
    
    installAllPrompt : (...args)=>{
        let tt=installmain
        let text=``

    
        $cnn.shellprompt("Run Install Wizard [y/n] ? " ,(answer)=>{
            if (answer.toLowerCase()==="n"){
                console.log( "install canceled\n")
                process.exit()
            }else{
                if (answer.toLowerCase()==="y" || answer.toLowerCase()===""){
                    console.log( "installing\n")
                    process.exit()
                }
            }   

            
        })

        


    }

}





module.exports.install=installmain